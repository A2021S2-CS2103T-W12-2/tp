@startuml
!include style.puml
skinparam arrowThickness 1.1
skinparam arrowColor LOGIC_COLOR_T4
skinparam classBackgroundColor LOGIC_COLOR

package Logic {

Class CommandHistory

package Parser {
Class "<<Interface>>\nParser"
Class AddressBookParser
Class XYZCommandParser
Class CliSyntax
Class ParserUtil
Class ArgumentMultimap
Class ArgumentTokenizer
Class Prefix
}

package Filter {
package combinator {
Class FilterCombinator
Class LogicalOperator
Class Node
Class "<<enumerations>>\nNodeType"
}
Class XYZFilter

Class Filters
Class "{abstract}\nFilter" as Filter
}

package Command {
Class XYZCommand
Class CommandResult
Class "{abstract}\nCommand" as Command
}


Class "<<Interface>>\nLogic"
Class LogicManager
}

package Model{
Class HiddenModel #FFFFFF
}

package Storage {
CLass HiddenStorage #FFFFFF
}

package Ui {
CLass HiddenUi #FFFFFF
}


Class HiddenOutside #FFFFFF
HiddenOutside ..> "<<Interface>>\nLogic"

LogicManager .up.|> "<<Interface>>\nLogic"
LogicManager -->"1" AddressBookParser
AddressBookParser .left.> XYZCommandParser: creates >

XYZCommandParser ..> XYZCommand : creates >
XYZCommandParser ..|> "<<Interface>>\nParser"
XYZCommandParser ..> ArgumentMultimap
XYZCommandParser ..> ArgumentTokenizer
ArgumentTokenizer .left.> ArgumentMultimap
XYZCommandParser ..> CliSyntax
CliSyntax ..> Prefix
XYZCommandParser ..> ParserUtil
ParserUtil .down.> Prefix
ArgumentTokenizer .down.> Prefix
XYZCommand -up-|> Command
LogicManager .left.> Command : executes >

LogicManager --> Model
Command .right.> Model
note right of XYZCommand: XYZCommand = AddCommand, \nFindCommand, etc

LogicManager --> Storage
Storage --[hidden] Model
Command .[hidden]up.> Storage

"<<Interface>>\nLogic" ..> CommandResult
LogicManager .down.> CommandResult
Command .up.> CommandResult
CommandResult -[hidden]-> "<<Interface>>\nParser"

'Filter .-->Model

CommandHistory  .right.->Ui

FilterCombinator .right.-> ArgumentTokenizer
FilterCombinator .-> Filter
FilterCombinator .down.-> CliSyntax
FilterCombinator .-> Filters
FilterCombinator .down.->Node


Filters .down.->CliSyntax
Filters .down.->ArgumentMultimap
Filters .down.->ArgumentTokenizer

XYZFilter -|> Filter

Node .-> LogicalOperator
Node .-> "<<enumerations>>\nNodeType"
Node .right.--> Filter
@enduml
